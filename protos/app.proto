syntax = "proto3";

package blog;

message Post {
  string post_id = 1;
  string author = 2;
  string title = 3;
  string content = 4;
  string timestamp = 5;
  repeated string likes = 6;
}

message Notification {
  string type = 1;
  string from = 2;
  string post_id = 3;
  string title = 4;
  string timestamp = 5;
}

message Request {
    repeated string info = 1;
}

message Response {
  // For blog operations
  int32 operation = 1;      // SUCCESS = 0, FAILURE = 1
  repeated string info = 2; // any extra string data
  repeated Post posts = 3;  // For post listing operations
  repeated Notification notifications = 4;
}

service Blog {
  rpc RPCLogin (Request) returns (Response);
  rpc RPCLogout (Request) returns (Response);
  rpc RPCCreateAccount (Request) returns (Response);
  rpc RPCDeleteAccount (Request) returns (Response);
  
  // Post operations
  rpc RPCCreatePost (Request) returns (Response);
  rpc RPCGetPost (Request) returns (Response);
  rpc RPCGetUserPosts (Request) returns (Response);
  rpc RPCGetPostById (Request) returns (Response);
  rpc RPCLikePost (Request) returns (Response);
  rpc RPCUnlikePost (Request) returns (Response);
  rpc RPCDeletePost (Request) returns (Response);
  
  // Subscription operations
  rpc RPCSubscribe (Request) returns (Response);
  rpc RPCUnsubscribe (Request) returns (Response);
  rpc RPCGetSubscriptions (Request) returns (Response);
  rpc RPCGetSubscribers (Request) returns (Response);
  rpc RPCGetUserFollowers (Request) returns (Response);
  
  // Notification operations
  rpc RPCGetNotifications (Request) returns (Response);
  rpc RPCMarkNotificationsAsRead (Request) returns (Response);
  
  // User operations
  rpc RPCSearchUsers (Request) returns (Response);
  rpc RPCGetUserProfile (Request) returns (Response);
}